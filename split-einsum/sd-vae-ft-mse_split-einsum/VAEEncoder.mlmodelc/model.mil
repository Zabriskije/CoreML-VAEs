program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}, {"coremltools-component-torch", "1.13.1"}, {"coremltools-version", "6.2"}})]
{
    func main<ios16>(tensor<fp16, [1, 4, 64, 64]> diagonal_noise, tensor<fp16, [1, 4, 64, 64]> noise, tensor<fp16, [1, 3, 512, 512]> sample, tensor<fp16, [1, 1]> sqrt_alphas_cumprod, tensor<fp16, [1, 1]> sqrt_one_minus_alphas_cumprod) {
            tensor<int32, []> var_11 = const()[name = tensor<string, []>("op_11"), val = tensor<int32, []>(-1)];
            tensor<int32, []> var_21 = const()[name = tensor<string, []>("op_21"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_39 = const()[name = tensor<string, []>("op_39"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_41 = const()[name = tensor<string, []>("op_41"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 3, 3, 3]> encoder_conv_in_weight_to_fp16 = const()[name = tensor<string, []>("encoder_conv_in_weight_to_fp16"), val = tensor<fp16, [128, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [128]> encoder_conv_in_bias_to_fp16 = const()[name = tensor<string, []>("encoder_conv_in_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7040)))];
            tensor<fp16, [1, 128, 512, 512]> input_1_cast = conv(bias = encoder_conv_in_bias_to_fp16, dilations = var_41, groups = var_21, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_39, weight = encoder_conv_in_weight_to_fp16, x = sample);
            tensor<int32, [5]> reshape_0_shape_0 = const()[name = tensor<string, []>("reshape_0_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_0_cast = reshape(shape = reshape_0_shape_0, x = input_1_cast);
            tensor<int32, [3]> reduce_mean_0_axes_0 = const()[name = tensor<string, []>("reduce_mean_0_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_0_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_0_cast = reduce_mean(axes = reduce_mean_0_axes_0, keep_dims = reduce_mean_0_keep_dims_0, x = reshape_0_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_0_cast = sub(x = reshape_0_cast, y = reduce_mean_0_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_0_cast = square(x = sub_0_cast);
            tensor<int32, [3]> reduce_mean_2_axes_0 = const()[name = tensor<string, []>("reduce_mean_2_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_2_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_2_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_2_cast = reduce_mean(axes = reduce_mean_2_axes_0, keep_dims = reduce_mean_2_keep_dims_0, x = square_0_cast);
            tensor<fp16, []> add_0_y_0_to_fp16 = const()[name = tensor<string, []>("add_0_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_0_cast = add(x = reduce_mean_2_cast, y = add_0_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_0_cast = sqrt(x = add_0_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_0_cast = real_div(x = sub_0_cast, y = sqrt_0_cast);
            tensor<int32, [4]> reshape_1_shape_0 = const()[name = tensor<string, []>("reshape_1_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_1_cast = reshape(shape = reshape_1_shape_0, x = real_div_0_cast);
            tensor<fp16, [128]> add_1_mean_0_to_fp16 = const()[name = tensor<string, []>("add_1_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7360)))];
            tensor<fp16, [128]> add_1_variance_0_to_fp16 = const()[name = tensor<string, []>("add_1_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7680)))];
            tensor<fp16, [128]> add_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_1_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8000)))];
            tensor<fp16, [128]> add_1_beta_0_to_fp16 = const()[name = tensor<string, []>("add_1_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8320)))];
            tensor<fp16, []> add_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_1_cast = batch_norm(beta = add_1_beta_0_to_fp16, epsilon = add_1_epsilon_0_to_fp16, gamma = add_1_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_1_cast);
            tensor<fp16, [1, 128, 512, 512]> input_5_cast = silu(x = add_1_cast);
            tensor<int32, [2]> var_60 = const()[name = tensor<string, []>("op_60"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_62 = const()[name = tensor<string, []>("op_62"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8640)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303616)))];
            tensor<fp16, [1, 128, 512, 512]> input_7_cast = conv(bias = encoder_down_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_62, groups = var_21, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_60, weight = encoder_down_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_5_cast);
            tensor<int32, [5]> reshape_4_shape_0 = const()[name = tensor<string, []>("reshape_4_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_4_cast = reshape(shape = reshape_4_shape_0, x = input_7_cast);
            tensor<int32, [3]> reduce_mean_3_axes_0 = const()[name = tensor<string, []>("reduce_mean_3_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_3_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_3_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_3_cast = reduce_mean(axes = reduce_mean_3_axes_0, keep_dims = reduce_mean_3_keep_dims_0, x = reshape_4_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_2_cast = sub(x = reshape_4_cast, y = reduce_mean_3_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_1_cast = square(x = sub_2_cast);
            tensor<int32, [3]> reduce_mean_5_axes_0 = const()[name = tensor<string, []>("reduce_mean_5_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_5_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_5_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_5_cast = reduce_mean(axes = reduce_mean_5_axes_0, keep_dims = reduce_mean_5_keep_dims_0, x = square_1_cast);
            tensor<fp16, []> add_2_y_0_to_fp16 = const()[name = tensor<string, []>("add_2_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_2_cast = add(x = reduce_mean_5_cast, y = add_2_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_1_cast = sqrt(x = add_2_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_1_cast = real_div(x = sub_2_cast, y = sqrt_1_cast);
            tensor<int32, [4]> reshape_5_shape_0 = const()[name = tensor<string, []>("reshape_5_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_5_cast = reshape(shape = reshape_5_shape_0, x = real_div_1_cast);
            tensor<fp16, [128]> add_3_mean_0_to_fp16 = const()[name = tensor<string, []>("add_3_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303936)))];
            tensor<fp16, [128]> add_3_variance_0_to_fp16 = const()[name = tensor<string, []>("add_3_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(304256)))];
            tensor<fp16, [128]> add_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_3_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(304576)))];
            tensor<fp16, [128]> add_3_beta_0_to_fp16 = const()[name = tensor<string, []>("add_3_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(304896)))];
            tensor<fp16, []> add_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_3_cast = batch_norm(beta = add_3_beta_0_to_fp16, epsilon = add_3_epsilon_0_to_fp16, gamma = add_3_gamma_0_to_fp16, mean = add_3_mean_0_to_fp16, variance = add_3_variance_0_to_fp16, x = reshape_5_cast);
            tensor<fp16, [1, 128, 512, 512]> input_11_cast = silu(x = add_3_cast);
            tensor<int32, [2]> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_74 = const()[name = tensor<string, []>("op_74"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_1_pad_type_0 = const()[name = tensor<string, []>("hidden_states_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_1_pad_0 = const()[name = tensor<string, []>("hidden_states_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(305216)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(600192)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_1_cast = conv(bias = encoder_down_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_74, groups = var_21, pad = hidden_states_1_pad_0, pad_type = hidden_states_1_pad_type_0, strides = var_72, weight = encoder_down_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_11_cast);
            tensor<fp16, [1, 128, 512, 512]> var_77_cast = add(x = input_1_cast, y = hidden_states_1_cast);
            tensor<int32, [5]> reshape_8_shape_0 = const()[name = tensor<string, []>("reshape_8_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_8_cast = reshape(shape = reshape_8_shape_0, x = var_77_cast);
            tensor<int32, [3]> reduce_mean_6_axes_0 = const()[name = tensor<string, []>("reduce_mean_6_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_6_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_6_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_6_cast = reduce_mean(axes = reduce_mean_6_axes_0, keep_dims = reduce_mean_6_keep_dims_0, x = reshape_8_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_4_cast = sub(x = reshape_8_cast, y = reduce_mean_6_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_2_cast = square(x = sub_4_cast);
            tensor<int32, [3]> reduce_mean_8_axes_0 = const()[name = tensor<string, []>("reduce_mean_8_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_8_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_8_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_8_cast = reduce_mean(axes = reduce_mean_8_axes_0, keep_dims = reduce_mean_8_keep_dims_0, x = square_2_cast);
            tensor<fp16, []> add_4_y_0_to_fp16 = const()[name = tensor<string, []>("add_4_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_4_cast = add(x = reduce_mean_8_cast, y = add_4_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_2_cast = sqrt(x = add_4_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_2_cast = real_div(x = sub_4_cast, y = sqrt_2_cast);
            tensor<int32, [4]> reshape_9_shape_0 = const()[name = tensor<string, []>("reshape_9_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_9_cast = reshape(shape = reshape_9_shape_0, x = real_div_2_cast);
            tensor<fp16, [128]> add_5_mean_0_to_fp16 = const()[name = tensor<string, []>("add_5_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(600512)))];
            tensor<fp16, [128]> add_5_variance_0_to_fp16 = const()[name = tensor<string, []>("add_5_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(600832)))];
            tensor<fp16, [128]> add_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_5_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(601152)))];
            tensor<fp16, [128]> add_5_beta_0_to_fp16 = const()[name = tensor<string, []>("add_5_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(601472)))];
            tensor<fp16, []> add_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_5_cast = batch_norm(beta = add_5_beta_0_to_fp16, epsilon = add_5_epsilon_0_to_fp16, gamma = add_5_gamma_0_to_fp16, mean = add_5_mean_0_to_fp16, variance = add_5_variance_0_to_fp16, x = reshape_9_cast);
            tensor<fp16, [1, 128, 512, 512]> input_19_cast = silu(x = add_5_cast);
            tensor<int32, [2]> var_90 = const()[name = tensor<string, []>("op_90"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_92 = const()[name = tensor<string, []>("op_92"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(601792)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(896768)))];
            tensor<fp16, [1, 128, 512, 512]> input_21_cast = conv(bias = encoder_down_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_92, groups = var_21, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_90, weight = encoder_down_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_19_cast);
            tensor<int32, [5]> reshape_12_shape_0 = const()[name = tensor<string, []>("reshape_12_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_12_cast = reshape(shape = reshape_12_shape_0, x = input_21_cast);
            tensor<int32, [3]> reduce_mean_9_axes_0 = const()[name = tensor<string, []>("reduce_mean_9_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_9_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_9_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_9_cast = reduce_mean(axes = reduce_mean_9_axes_0, keep_dims = reduce_mean_9_keep_dims_0, x = reshape_12_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_6_cast = sub(x = reshape_12_cast, y = reduce_mean_9_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_3_cast = square(x = sub_6_cast);
            tensor<int32, [3]> reduce_mean_11_axes_0 = const()[name = tensor<string, []>("reduce_mean_11_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_11_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_11_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_11_cast = reduce_mean(axes = reduce_mean_11_axes_0, keep_dims = reduce_mean_11_keep_dims_0, x = square_3_cast);
            tensor<fp16, []> add_6_y_0_to_fp16 = const()[name = tensor<string, []>("add_6_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_6_cast = add(x = reduce_mean_11_cast, y = add_6_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_3_cast = sqrt(x = add_6_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_3_cast = real_div(x = sub_6_cast, y = sqrt_3_cast);
            tensor<int32, [4]> reshape_13_shape_0 = const()[name = tensor<string, []>("reshape_13_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_13_cast = reshape(shape = reshape_13_shape_0, x = real_div_3_cast);
            tensor<fp16, [128]> add_7_mean_0_to_fp16 = const()[name = tensor<string, []>("add_7_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(897088)))];
            tensor<fp16, [128]> add_7_variance_0_to_fp16 = const()[name = tensor<string, []>("add_7_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(897408)))];
            tensor<fp16, [128]> add_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_7_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(897728)))];
            tensor<fp16, [128]> add_7_beta_0_to_fp16 = const()[name = tensor<string, []>("add_7_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(898048)))];
            tensor<fp16, []> add_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_7_cast = batch_norm(beta = add_7_beta_0_to_fp16, epsilon = add_7_epsilon_0_to_fp16, gamma = add_7_gamma_0_to_fp16, mean = add_7_mean_0_to_fp16, variance = add_7_variance_0_to_fp16, x = reshape_13_cast);
            tensor<fp16, [1, 128, 512, 512]> input_25_cast = silu(x = add_7_cast);
            tensor<int32, [2]> var_102 = const()[name = tensor<string, []>("op_102"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_104 = const()[name = tensor<string, []>("op_104"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(898368)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1193344)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_3_cast = conv(bias = encoder_down_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_104, groups = var_21, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_102, weight = encoder_down_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_25_cast);
            tensor<fp16, [1, 128, 512, 512]> var_107_cast = add(x = var_77_cast, y = hidden_states_3_cast);
            tensor<int32, [8]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 0, 1, 0, 1])];
            tensor<string, []> hidden_states_7_mode_0 = const()[name = tensor<string, []>("hidden_states_7_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp16, []> hidden_states_7_constant_val_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_7_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 128, 513, 513]> hidden_states_7_cast = pad(constant_val = hidden_states_7_constant_val_0_to_fp16, mode = hidden_states_7_mode_0, pad = hidden_states_7_pad_0, x = var_107_cast);
            tensor<int32, [2]> var_115 = const()[name = tensor<string, []>("op_115"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_117 = const()[name = tensor<string, []>("op_117"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1193664)))];
            tensor<fp16, [128]> encoder_down_blocks_0_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1488640)))];
            tensor<fp16, [1, 128, 256, 256]> input_29_cast = conv(bias = encoder_down_blocks_0_downsamplers_0_conv_bias_to_fp16, dilations = var_117, groups = var_21, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_115, weight = encoder_down_blocks_0_downsamplers_0_conv_weight_to_fp16, x = hidden_states_7_cast);
            tensor<int32, [5]> reshape_16_shape_0 = const()[name = tensor<string, []>("reshape_16_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 256, 256])];
            tensor<fp16, [1, 32, 4, 256, 256]> reshape_16_cast = reshape(shape = reshape_16_shape_0, x = input_29_cast);
            tensor<int32, [3]> reduce_mean_12_axes_0 = const()[name = tensor<string, []>("reduce_mean_12_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_12_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_12_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_12_cast = reduce_mean(axes = reduce_mean_12_axes_0, keep_dims = reduce_mean_12_keep_dims_0, x = reshape_16_cast);
            tensor<fp16, [1, 32, 4, 256, 256]> sub_8_cast = sub(x = reshape_16_cast, y = reduce_mean_12_cast);
            tensor<fp16, [1, 32, 4, 256, 256]> square_4_cast = square(x = sub_8_cast);
            tensor<int32, [3]> reduce_mean_14_axes_0 = const()[name = tensor<string, []>("reduce_mean_14_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_14_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_14_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_14_cast = reduce_mean(axes = reduce_mean_14_axes_0, keep_dims = reduce_mean_14_keep_dims_0, x = square_4_cast);
            tensor<fp16, []> add_8_y_0_to_fp16 = const()[name = tensor<string, []>("add_8_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_8_cast = add(x = reduce_mean_14_cast, y = add_8_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_4_cast = sqrt(x = add_8_cast);
            tensor<fp16, [1, 32, 4, 256, 256]> real_div_4_cast = real_div(x = sub_8_cast, y = sqrt_4_cast);
            tensor<int32, [4]> reshape_17_shape_0 = const()[name = tensor<string, []>("reshape_17_shape_0"), val = tensor<int32, [4]>([1, 128, 256, 256])];
            tensor<fp16, [1, 128, 256, 256]> reshape_17_cast = reshape(shape = reshape_17_shape_0, x = real_div_4_cast);
            tensor<fp16, [128]> add_9_mean_0_to_fp16 = const()[name = tensor<string, []>("add_9_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1488960)))];
            tensor<fp16, [128]> add_9_variance_0_to_fp16 = const()[name = tensor<string, []>("add_9_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1489280)))];
            tensor<fp16, [128]> add_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_9_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1489600)))];
            tensor<fp16, [128]> add_9_beta_0_to_fp16 = const()[name = tensor<string, []>("add_9_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1489920)))];
            tensor<fp16, []> add_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 256, 256]> add_9_cast = batch_norm(beta = add_9_beta_0_to_fp16, epsilon = add_9_epsilon_0_to_fp16, gamma = add_9_gamma_0_to_fp16, mean = add_9_mean_0_to_fp16, variance = add_9_variance_0_to_fp16, x = reshape_17_cast);
            tensor<fp16, [1, 128, 256, 256]> input_33_cast = silu(x = add_9_cast);
            tensor<int32, [2]> var_137 = const()[name = tensor<string, []>("op_137"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_139 = const()[name = tensor<string, []>("op_139"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_35_pad_type_0 = const()[name = tensor<string, []>("input_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_35_pad_0 = const()[name = tensor<string, []>("input_35_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> encoder_down_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1490240)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2080128)))];
            tensor<fp16, [1, 256, 256, 256]> input_35_cast = conv(bias = encoder_down_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_139, groups = var_21, pad = input_35_pad_0, pad_type = input_35_pad_type_0, strides = var_137, weight = encoder_down_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_33_cast);
            tensor<int32, [5]> reshape_20_shape_0 = const()[name = tensor<string, []>("reshape_20_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_20_cast = reshape(shape = reshape_20_shape_0, x = input_35_cast);
            tensor<int32, [3]> reduce_mean_15_axes_0 = const()[name = tensor<string, []>("reduce_mean_15_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_15_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_15_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_15_cast = reduce_mean(axes = reduce_mean_15_axes_0, keep_dims = reduce_mean_15_keep_dims_0, x = reshape_20_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_10_cast = sub(x = reshape_20_cast, y = reduce_mean_15_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_5_cast = square(x = sub_10_cast);
            tensor<int32, [3]> reduce_mean_17_axes_0 = const()[name = tensor<string, []>("reduce_mean_17_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_17_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_17_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_17_cast = reduce_mean(axes = reduce_mean_17_axes_0, keep_dims = reduce_mean_17_keep_dims_0, x = square_5_cast);
            tensor<fp16, []> add_10_y_0_to_fp16 = const()[name = tensor<string, []>("add_10_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_10_cast = add(x = reduce_mean_17_cast, y = add_10_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_5_cast = sqrt(x = add_10_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_5_cast = real_div(x = sub_10_cast, y = sqrt_5_cast);
            tensor<int32, [4]> reshape_21_shape_0 = const()[name = tensor<string, []>("reshape_21_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_21_cast = reshape(shape = reshape_21_shape_0, x = real_div_5_cast);
            tensor<fp16, [256]> add_11_mean_0_to_fp16 = const()[name = tensor<string, []>("add_11_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2080704)))];
            tensor<fp16, [256]> add_11_variance_0_to_fp16 = const()[name = tensor<string, []>("add_11_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2081280)))];
            tensor<fp16, [256]> add_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_11_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2081856)))];
            tensor<fp16, [256]> add_11_beta_0_to_fp16 = const()[name = tensor<string, []>("add_11_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2082432)))];
            tensor<fp16, []> add_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_11_cast = batch_norm(beta = add_11_beta_0_to_fp16, epsilon = add_11_epsilon_0_to_fp16, gamma = add_11_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_21_cast);
            tensor<fp16, [1, 256, 256, 256]> input_39_cast = silu(x = add_11_cast);
            tensor<int32, [2]> var_149 = const()[name = tensor<string, []>("op_149"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_151 = const()[name = tensor<string, []>("op_151"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2083008)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3262720)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_9_cast = conv(bias = encoder_down_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_151, groups = var_21, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_149, weight = encoder_down_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_39_cast);
            tensor<int32, [2]> var_156 = const()[name = tensor<string, []>("op_156"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_158 = const()[name = tensor<string, []>("op_158"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_tensor_1_pad_type_0 = const()[name = tensor<string, []>("input_tensor_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_tensor_1_pad_0 = const()[name = tensor<string, []>("input_tensor_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 128, 1, 1]> encoder_down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [256, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3263296)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3328896)))];
            tensor<fp16, [1, 256, 256, 256]> input_tensor_1_cast = conv(bias = encoder_down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_158, groups = var_21, pad = input_tensor_1_pad_0, pad_type = input_tensor_1_pad_type_0, strides = var_156, weight = encoder_down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_29_cast);
            tensor<fp16, [1, 256, 256, 256]> var_161_cast = add(x = input_tensor_1_cast, y = hidden_states_9_cast);
            tensor<int32, [5]> reshape_24_shape_0 = const()[name = tensor<string, []>("reshape_24_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_24_cast = reshape(shape = reshape_24_shape_0, x = var_161_cast);
            tensor<int32, [3]> reduce_mean_18_axes_0 = const()[name = tensor<string, []>("reduce_mean_18_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_18_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_18_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_18_cast = reduce_mean(axes = reduce_mean_18_axes_0, keep_dims = reduce_mean_18_keep_dims_0, x = reshape_24_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_12_cast = sub(x = reshape_24_cast, y = reduce_mean_18_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_6_cast = square(x = sub_12_cast);
            tensor<int32, [3]> reduce_mean_20_axes_0 = const()[name = tensor<string, []>("reduce_mean_20_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_20_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_20_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_20_cast = reduce_mean(axes = reduce_mean_20_axes_0, keep_dims = reduce_mean_20_keep_dims_0, x = square_6_cast);
            tensor<fp16, []> add_12_y_0_to_fp16 = const()[name = tensor<string, []>("add_12_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_12_cast = add(x = reduce_mean_20_cast, y = add_12_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_6_cast = sqrt(x = add_12_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_6_cast = real_div(x = sub_12_cast, y = sqrt_6_cast);
            tensor<int32, [4]> reshape_25_shape_0 = const()[name = tensor<string, []>("reshape_25_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_25_cast = reshape(shape = reshape_25_shape_0, x = real_div_6_cast);
            tensor<fp16, [256]> add_13_mean_0_to_fp16 = const()[name = tensor<string, []>("add_13_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3329472)))];
            tensor<fp16, [256]> add_13_variance_0_to_fp16 = const()[name = tensor<string, []>("add_13_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3330048)))];
            tensor<fp16, [256]> add_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_13_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3330624)))];
            tensor<fp16, [256]> add_13_beta_0_to_fp16 = const()[name = tensor<string, []>("add_13_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3331200)))];
            tensor<fp16, []> add_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_13_cast = batch_norm(beta = add_13_beta_0_to_fp16, epsilon = add_13_epsilon_0_to_fp16, gamma = add_13_gamma_0_to_fp16, mean = add_13_mean_0_to_fp16, variance = add_13_variance_0_to_fp16, x = reshape_25_cast);
            tensor<fp16, [1, 256, 256, 256]> input_47_cast = silu(x = add_13_cast);
            tensor<int32, [2]> var_174 = const()[name = tensor<string, []>("op_174"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_176 = const()[name = tensor<string, []>("op_176"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3331776)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4511488)))];
            tensor<fp16, [1, 256, 256, 256]> input_49_cast = conv(bias = encoder_down_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_176, groups = var_21, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_174, weight = encoder_down_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_47_cast);
            tensor<int32, [5]> reshape_28_shape_0 = const()[name = tensor<string, []>("reshape_28_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_28_cast = reshape(shape = reshape_28_shape_0, x = input_49_cast);
            tensor<int32, [3]> reduce_mean_21_axes_0 = const()[name = tensor<string, []>("reduce_mean_21_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_21_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_21_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_21_cast = reduce_mean(axes = reduce_mean_21_axes_0, keep_dims = reduce_mean_21_keep_dims_0, x = reshape_28_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_14_cast = sub(x = reshape_28_cast, y = reduce_mean_21_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_7_cast = square(x = sub_14_cast);
            tensor<int32, [3]> reduce_mean_23_axes_0 = const()[name = tensor<string, []>("reduce_mean_23_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_23_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_23_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_23_cast = reduce_mean(axes = reduce_mean_23_axes_0, keep_dims = reduce_mean_23_keep_dims_0, x = square_7_cast);
            tensor<fp16, []> add_14_y_0_to_fp16 = const()[name = tensor<string, []>("add_14_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_14_cast = add(x = reduce_mean_23_cast, y = add_14_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_7_cast = sqrt(x = add_14_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_7_cast = real_div(x = sub_14_cast, y = sqrt_7_cast);
            tensor<int32, [4]> reshape_29_shape_0 = const()[name = tensor<string, []>("reshape_29_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_29_cast = reshape(shape = reshape_29_shape_0, x = real_div_7_cast);
            tensor<fp16, [256]> add_15_mean_0_to_fp16 = const()[name = tensor<string, []>("add_15_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4512064)))];
            tensor<fp16, [256]> add_15_variance_0_to_fp16 = const()[name = tensor<string, []>("add_15_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4512640)))];
            tensor<fp16, [256]> add_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_15_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4513216)))];
            tensor<fp16, [256]> add_15_beta_0_to_fp16 = const()[name = tensor<string, []>("add_15_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4513792)))];
            tensor<fp16, []> add_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_15_cast = batch_norm(beta = add_15_beta_0_to_fp16, epsilon = add_15_epsilon_0_to_fp16, gamma = add_15_gamma_0_to_fp16, mean = add_15_mean_0_to_fp16, variance = add_15_variance_0_to_fp16, x = reshape_29_cast);
            tensor<fp16, [1, 256, 256, 256]> input_53_cast = silu(x = add_15_cast);
            tensor<int32, [2]> var_186 = const()[name = tensor<string, []>("op_186"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_188 = const()[name = tensor<string, []>("op_188"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_11_pad_type_0 = const()[name = tensor<string, []>("hidden_states_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_11_pad_0 = const()[name = tensor<string, []>("hidden_states_11_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4514368)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5694080)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_11_cast = conv(bias = encoder_down_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_188, groups = var_21, pad = hidden_states_11_pad_0, pad_type = hidden_states_11_pad_type_0, strides = var_186, weight = encoder_down_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_53_cast);
            tensor<fp16, [1, 256, 256, 256]> var_191_cast = add(x = var_161_cast, y = hidden_states_11_cast);
            tensor<int32, [8]> hidden_states_15_pad_0 = const()[name = tensor<string, []>("hidden_states_15_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 0, 1, 0, 1])];
            tensor<string, []> hidden_states_15_mode_0 = const()[name = tensor<string, []>("hidden_states_15_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp16, []> hidden_states_15_constant_val_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_15_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 256, 257, 257]> hidden_states_15_cast = pad(constant_val = hidden_states_15_constant_val_0_to_fp16, mode = hidden_states_15_mode_0, pad = hidden_states_15_pad_0, x = var_191_cast);
            tensor<int32, [2]> var_199 = const()[name = tensor<string, []>("op_199"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_201 = const()[name = tensor<string, []>("op_201"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5694656)))];
            tensor<fp16, [256]> encoder_down_blocks_1_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6874368)))];
            tensor<fp16, [1, 256, 128, 128]> input_57_cast = conv(bias = encoder_down_blocks_1_downsamplers_0_conv_bias_to_fp16, dilations = var_201, groups = var_21, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_199, weight = encoder_down_blocks_1_downsamplers_0_conv_weight_to_fp16, x = hidden_states_15_cast);
            tensor<int32, [5]> reshape_32_shape_0 = const()[name = tensor<string, []>("reshape_32_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 128, 128])];
            tensor<fp16, [1, 32, 8, 128, 128]> reshape_32_cast = reshape(shape = reshape_32_shape_0, x = input_57_cast);
            tensor<int32, [3]> reduce_mean_24_axes_0 = const()[name = tensor<string, []>("reduce_mean_24_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_24_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_24_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_24_cast = reduce_mean(axes = reduce_mean_24_axes_0, keep_dims = reduce_mean_24_keep_dims_0, x = reshape_32_cast);
            tensor<fp16, [1, 32, 8, 128, 128]> sub_16_cast = sub(x = reshape_32_cast, y = reduce_mean_24_cast);
            tensor<fp16, [1, 32, 8, 128, 128]> square_8_cast = square(x = sub_16_cast);
            tensor<int32, [3]> reduce_mean_26_axes_0 = const()[name = tensor<string, []>("reduce_mean_26_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_26_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_26_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_26_cast = reduce_mean(axes = reduce_mean_26_axes_0, keep_dims = reduce_mean_26_keep_dims_0, x = square_8_cast);
            tensor<fp16, []> add_16_y_0_to_fp16 = const()[name = tensor<string, []>("add_16_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_16_cast = add(x = reduce_mean_26_cast, y = add_16_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_8_cast = sqrt(x = add_16_cast);
            tensor<fp16, [1, 32, 8, 128, 128]> real_div_8_cast = real_div(x = sub_16_cast, y = sqrt_8_cast);
            tensor<int32, [4]> reshape_33_shape_0 = const()[name = tensor<string, []>("reshape_33_shape_0"), val = tensor<int32, [4]>([1, 256, 128, 128])];
            tensor<fp16, [1, 256, 128, 128]> reshape_33_cast = reshape(shape = reshape_33_shape_0, x = real_div_8_cast);
            tensor<fp16, [256]> add_17_mean_0_to_fp16 = const()[name = tensor<string, []>("add_17_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6874944)))];
            tensor<fp16, [256]> add_17_variance_0_to_fp16 = const()[name = tensor<string, []>("add_17_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6875520)))];
            tensor<fp16, [256]> add_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_17_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6876096)))];
            tensor<fp16, [256]> add_17_beta_0_to_fp16 = const()[name = tensor<string, []>("add_17_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6876672)))];
            tensor<fp16, []> add_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 128, 128]> add_17_cast = batch_norm(beta = add_17_beta_0_to_fp16, epsilon = add_17_epsilon_0_to_fp16, gamma = add_17_gamma_0_to_fp16, mean = add_17_mean_0_to_fp16, variance = add_17_variance_0_to_fp16, x = reshape_33_cast);
            tensor<fp16, [1, 256, 128, 128]> input_61_cast = silu(x = add_17_cast);
            tensor<int32, [2]> var_221 = const()[name = tensor<string, []>("op_221"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_223 = const()[name = tensor<string, []>("op_223"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 256, 3, 3]> encoder_down_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6877248)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9236608)))];
            tensor<fp16, [1, 512, 128, 128]> input_63_cast = conv(bias = encoder_down_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_223, groups = var_21, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_221, weight = encoder_down_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_61_cast);
            tensor<int32, [5]> reshape_36_shape_0 = const()[name = tensor<string, []>("reshape_36_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_36_cast = reshape(shape = reshape_36_shape_0, x = input_63_cast);
            tensor<int32, [3]> reduce_mean_27_axes_0 = const()[name = tensor<string, []>("reduce_mean_27_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_27_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_27_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_27_cast = reduce_mean(axes = reduce_mean_27_axes_0, keep_dims = reduce_mean_27_keep_dims_0, x = reshape_36_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_18_cast = sub(x = reshape_36_cast, y = reduce_mean_27_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_9_cast = square(x = sub_18_cast);
            tensor<int32, [3]> reduce_mean_29_axes_0 = const()[name = tensor<string, []>("reduce_mean_29_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_29_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_29_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_29_cast = reduce_mean(axes = reduce_mean_29_axes_0, keep_dims = reduce_mean_29_keep_dims_0, x = square_9_cast);
            tensor<fp16, []> add_18_y_0_to_fp16 = const()[name = tensor<string, []>("add_18_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_18_cast = add(x = reduce_mean_29_cast, y = add_18_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_9_cast = sqrt(x = add_18_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_9_cast = real_div(x = sub_18_cast, y = sqrt_9_cast);
            tensor<int32, [4]> reshape_37_shape_0 = const()[name = tensor<string, []>("reshape_37_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_37_cast = reshape(shape = reshape_37_shape_0, x = real_div_9_cast);
            tensor<fp16, [512]> add_19_mean_0_to_fp16 = const()[name = tensor<string, []>("add_19_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9237696)))];
            tensor<fp16, [512]> add_19_variance_0_to_fp16 = const()[name = tensor<string, []>("add_19_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9238784)))];
            tensor<fp16, [512]> add_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_19_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9239872)))];
            tensor<fp16, [512]> add_19_beta_0_to_fp16 = const()[name = tensor<string, []>("add_19_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9240960)))];
            tensor<fp16, []> add_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_19_cast = batch_norm(beta = add_19_beta_0_to_fp16, epsilon = add_19_epsilon_0_to_fp16, gamma = add_19_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_37_cast);
            tensor<fp16, [1, 512, 128, 128]> input_67_cast = silu(x = add_19_cast);
            tensor<int32, [2]> var_233 = const()[name = tensor<string, []>("op_233"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_235 = const()[name = tensor<string, []>("op_235"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9242048)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13960704)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_17_cast = conv(bias = encoder_down_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_235, groups = var_21, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_233, weight = encoder_down_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_67_cast);
            tensor<int32, [2]> var_240 = const()[name = tensor<string, []>("op_240"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_242 = const()[name = tensor<string, []>("op_242"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_tensor_pad_type_0 = const()[name = tensor<string, []>("input_tensor_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_tensor_pad_0 = const()[name = tensor<string, []>("input_tensor_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 256, 1, 1]> encoder_down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [512, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13961792)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14224000)))];
            tensor<fp16, [1, 512, 128, 128]> input_tensor_cast = conv(bias = encoder_down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_242, groups = var_21, pad = input_tensor_pad_0, pad_type = input_tensor_pad_type_0, strides = var_240, weight = encoder_down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_57_cast);
            tensor<fp16, [1, 512, 128, 128]> var_245_cast = add(x = input_tensor_cast, y = hidden_states_17_cast);
            tensor<int32, [5]> reshape_40_shape_0 = const()[name = tensor<string, []>("reshape_40_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_40_cast = reshape(shape = reshape_40_shape_0, x = var_245_cast);
            tensor<int32, [3]> reduce_mean_30_axes_0 = const()[name = tensor<string, []>("reduce_mean_30_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_30_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_30_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_30_cast = reduce_mean(axes = reduce_mean_30_axes_0, keep_dims = reduce_mean_30_keep_dims_0, x = reshape_40_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_20_cast = sub(x = reshape_40_cast, y = reduce_mean_30_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_10_cast = square(x = sub_20_cast);
            tensor<int32, [3]> reduce_mean_32_axes_0 = const()[name = tensor<string, []>("reduce_mean_32_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_32_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_32_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_32_cast = reduce_mean(axes = reduce_mean_32_axes_0, keep_dims = reduce_mean_32_keep_dims_0, x = square_10_cast);
            tensor<fp16, []> add_20_y_0_to_fp16 = const()[name = tensor<string, []>("add_20_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_20_cast = add(x = reduce_mean_32_cast, y = add_20_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_10_cast = sqrt(x = add_20_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_10_cast = real_div(x = sub_20_cast, y = sqrt_10_cast);
            tensor<int32, [4]> reshape_41_shape_0 = const()[name = tensor<string, []>("reshape_41_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_41_cast = reshape(shape = reshape_41_shape_0, x = real_div_10_cast);
            tensor<fp16, [512]> add_21_mean_0_to_fp16 = const()[name = tensor<string, []>("add_21_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14225088)))];
            tensor<fp16, [512]> add_21_variance_0_to_fp16 = const()[name = tensor<string, []>("add_21_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14226176)))];
            tensor<fp16, [512]> add_21_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_21_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14227264)))];
            tensor<fp16, [512]> add_21_beta_0_to_fp16 = const()[name = tensor<string, []>("add_21_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14228352)))];
            tensor<fp16, []> add_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_21_cast = batch_norm(beta = add_21_beta_0_to_fp16, epsilon = add_21_epsilon_0_to_fp16, gamma = add_21_gamma_0_to_fp16, mean = add_21_mean_0_to_fp16, variance = add_21_variance_0_to_fp16, x = reshape_41_cast);
            tensor<fp16, [1, 512, 128, 128]> input_75_cast = silu(x = add_21_cast);
            tensor<int32, [2]> var_258 = const()[name = tensor<string, []>("op_258"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_260 = const()[name = tensor<string, []>("op_260"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14229440)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18948096)))];
            tensor<fp16, [1, 512, 128, 128]> input_77_cast = conv(bias = encoder_down_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_260, groups = var_21, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_258, weight = encoder_down_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_75_cast);
            tensor<int32, [5]> reshape_44_shape_0 = const()[name = tensor<string, []>("reshape_44_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_44_cast = reshape(shape = reshape_44_shape_0, x = input_77_cast);
            tensor<int32, [3]> reduce_mean_33_axes_0 = const()[name = tensor<string, []>("reduce_mean_33_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_33_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_33_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_33_cast = reduce_mean(axes = reduce_mean_33_axes_0, keep_dims = reduce_mean_33_keep_dims_0, x = reshape_44_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_22_cast = sub(x = reshape_44_cast, y = reduce_mean_33_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_11_cast = square(x = sub_22_cast);
            tensor<int32, [3]> reduce_mean_35_axes_0 = const()[name = tensor<string, []>("reduce_mean_35_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_35_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_35_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_35_cast = reduce_mean(axes = reduce_mean_35_axes_0, keep_dims = reduce_mean_35_keep_dims_0, x = square_11_cast);
            tensor<fp16, []> add_22_y_0_to_fp16 = const()[name = tensor<string, []>("add_22_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_22_cast = add(x = reduce_mean_35_cast, y = add_22_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_11_cast = sqrt(x = add_22_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_11_cast = real_div(x = sub_22_cast, y = sqrt_11_cast);
            tensor<int32, [4]> reshape_45_shape_0 = const()[name = tensor<string, []>("reshape_45_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_45_cast = reshape(shape = reshape_45_shape_0, x = real_div_11_cast);
            tensor<fp16, [512]> add_23_mean_0_to_fp16 = const()[name = tensor<string, []>("add_23_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18949184)))];
            tensor<fp16, [512]> add_23_variance_0_to_fp16 = const()[name = tensor<string, []>("add_23_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18950272)))];
            tensor<fp16, [512]> add_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_23_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18951360)))];
            tensor<fp16, [512]> add_23_beta_0_to_fp16 = const()[name = tensor<string, []>("add_23_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18952448)))];
            tensor<fp16, []> add_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_23_cast = batch_norm(beta = add_23_beta_0_to_fp16, epsilon = add_23_epsilon_0_to_fp16, gamma = add_23_gamma_0_to_fp16, mean = add_23_mean_0_to_fp16, variance = add_23_variance_0_to_fp16, x = reshape_45_cast);
            tensor<fp16, [1, 512, 128, 128]> input_81_cast = silu(x = add_23_cast);
            tensor<int32, [2]> var_270 = const()[name = tensor<string, []>("op_270"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_272 = const()[name = tensor<string, []>("op_272"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18953536)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23672192)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_19_cast = conv(bias = encoder_down_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_272, groups = var_21, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_270, weight = encoder_down_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_81_cast);
            tensor<fp16, [1, 512, 128, 128]> var_275_cast = add(x = var_245_cast, y = hidden_states_19_cast);
            tensor<int32, [8]> hidden_states_23_pad_0 = const()[name = tensor<string, []>("hidden_states_23_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 0, 1, 0, 1])];
            tensor<string, []> hidden_states_23_mode_0 = const()[name = tensor<string, []>("hidden_states_23_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp16, []> hidden_states_23_constant_val_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_23_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 129, 129]> hidden_states_23_cast = pad(constant_val = hidden_states_23_constant_val_0_to_fp16, mode = hidden_states_23_mode_0, pad = hidden_states_23_pad_0, x = var_275_cast);
            tensor<int32, [2]> var_283 = const()[name = tensor<string, []>("op_283"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_285 = const()[name = tensor<string, []>("op_285"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23673280)))];
            tensor<fp16, [512]> encoder_down_blocks_2_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28391936)))];
            tensor<fp16, [1, 512, 64, 64]> input_85_cast = conv(bias = encoder_down_blocks_2_downsamplers_0_conv_bias_to_fp16, dilations = var_285, groups = var_21, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_283, weight = encoder_down_blocks_2_downsamplers_0_conv_weight_to_fp16, x = hidden_states_23_cast);
            tensor<int32, [5]> reshape_48_shape_0 = const()[name = tensor<string, []>("reshape_48_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_48_cast = reshape(shape = reshape_48_shape_0, x = input_85_cast);
            tensor<int32, [3]> reduce_mean_36_axes_0 = const()[name = tensor<string, []>("reduce_mean_36_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_36_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_36_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_36_cast = reduce_mean(axes = reduce_mean_36_axes_0, keep_dims = reduce_mean_36_keep_dims_0, x = reshape_48_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_24_cast = sub(x = reshape_48_cast, y = reduce_mean_36_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_12_cast = square(x = sub_24_cast);
            tensor<int32, [3]> reduce_mean_38_axes_0 = const()[name = tensor<string, []>("reduce_mean_38_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_38_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_38_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_38_cast = reduce_mean(axes = reduce_mean_38_axes_0, keep_dims = reduce_mean_38_keep_dims_0, x = square_12_cast);
            tensor<fp16, []> add_24_y_0_to_fp16 = const()[name = tensor<string, []>("add_24_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_24_cast = add(x = reduce_mean_38_cast, y = add_24_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_12_cast = sqrt(x = add_24_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_12_cast = real_div(x = sub_24_cast, y = sqrt_12_cast);
            tensor<int32, [4]> reshape_49_shape_0 = const()[name = tensor<string, []>("reshape_49_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_49_cast = reshape(shape = reshape_49_shape_0, x = real_div_12_cast);
            tensor<fp16, [512]> add_25_mean_0_to_fp16 = const()[name = tensor<string, []>("add_25_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28393024)))];
            tensor<fp16, [512]> add_25_variance_0_to_fp16 = const()[name = tensor<string, []>("add_25_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28394112)))];
            tensor<fp16, [512]> add_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_25_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28395200)))];
            tensor<fp16, [512]> add_25_beta_0_to_fp16 = const()[name = tensor<string, []>("add_25_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28396288)))];
            tensor<fp16, []> add_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_25_cast = batch_norm(beta = add_25_beta_0_to_fp16, epsilon = add_25_epsilon_0_to_fp16, gamma = add_25_gamma_0_to_fp16, mean = add_25_mean_0_to_fp16, variance = add_25_variance_0_to_fp16, x = reshape_49_cast);
            tensor<fp16, [1, 512, 64, 64]> input_89_cast = silu(x = add_25_cast);
            tensor<int32, [2]> var_302 = const()[name = tensor<string, []>("op_302"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_304 = const()[name = tensor<string, []>("op_304"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_91_pad_type_0 = const()[name = tensor<string, []>("input_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_91_pad_0 = const()[name = tensor<string, []>("input_91_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28397376)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33116032)))];
            tensor<fp16, [1, 512, 64, 64]> input_91_cast = conv(bias = encoder_down_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_304, groups = var_21, pad = input_91_pad_0, pad_type = input_91_pad_type_0, strides = var_302, weight = encoder_down_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_89_cast);
            tensor<int32, [5]> reshape_52_shape_0 = const()[name = tensor<string, []>("reshape_52_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_52_cast = reshape(shape = reshape_52_shape_0, x = input_91_cast);
            tensor<int32, [3]> reduce_mean_39_axes_0 = const()[name = tensor<string, []>("reduce_mean_39_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_39_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_39_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_39_cast = reduce_mean(axes = reduce_mean_39_axes_0, keep_dims = reduce_mean_39_keep_dims_0, x = reshape_52_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_26_cast = sub(x = reshape_52_cast, y = reduce_mean_39_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_13_cast = square(x = sub_26_cast);
            tensor<int32, [3]> reduce_mean_41_axes_0 = const()[name = tensor<string, []>("reduce_mean_41_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_41_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_41_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_41_cast = reduce_mean(axes = reduce_mean_41_axes_0, keep_dims = reduce_mean_41_keep_dims_0, x = square_13_cast);
            tensor<fp16, []> add_26_y_0_to_fp16 = const()[name = tensor<string, []>("add_26_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_26_cast = add(x = reduce_mean_41_cast, y = add_26_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_13_cast = sqrt(x = add_26_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_13_cast = real_div(x = sub_26_cast, y = sqrt_13_cast);
            tensor<int32, [4]> reshape_53_shape_0 = const()[name = tensor<string, []>("reshape_53_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_53_cast = reshape(shape = reshape_53_shape_0, x = real_div_13_cast);
            tensor<fp16, [512]> add_27_mean_0_to_fp16 = const()[name = tensor<string, []>("add_27_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33117120)))];
            tensor<fp16, [512]> add_27_variance_0_to_fp16 = const()[name = tensor<string, []>("add_27_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33118208)))];
            tensor<fp16, [512]> add_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_27_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33119296)))];
            tensor<fp16, [512]> add_27_beta_0_to_fp16 = const()[name = tensor<string, []>("add_27_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33120384)))];
            tensor<fp16, []> add_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_27_cast = batch_norm(beta = add_27_beta_0_to_fp16, epsilon = add_27_epsilon_0_to_fp16, gamma = add_27_gamma_0_to_fp16, mean = add_27_mean_0_to_fp16, variance = add_27_variance_0_to_fp16, x = reshape_53_cast);
            tensor<fp16, [1, 512, 64, 64]> input_95_cast = silu(x = add_27_cast);
            tensor<int32, [2]> var_314 = const()[name = tensor<string, []>("op_314"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_316 = const()[name = tensor<string, []>("op_316"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33121472)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37840128)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_25_cast = conv(bias = encoder_down_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_316, groups = var_21, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_314, weight = encoder_down_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_95_cast);
            tensor<fp16, [1, 512, 64, 64]> var_319_cast = add(x = input_85_cast, y = hidden_states_25_cast);
            tensor<int32, [5]> reshape_56_shape_0 = const()[name = tensor<string, []>("reshape_56_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_56_cast = reshape(shape = reshape_56_shape_0, x = var_319_cast);
            tensor<int32, [3]> reduce_mean_42_axes_0 = const()[name = tensor<string, []>("reduce_mean_42_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_42_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_42_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_42_cast = reduce_mean(axes = reduce_mean_42_axes_0, keep_dims = reduce_mean_42_keep_dims_0, x = reshape_56_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_28_cast = sub(x = reshape_56_cast, y = reduce_mean_42_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_14_cast = square(x = sub_28_cast);
            tensor<int32, [3]> reduce_mean_44_axes_0 = const()[name = tensor<string, []>("reduce_mean_44_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_44_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_44_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_44_cast = reduce_mean(axes = reduce_mean_44_axes_0, keep_dims = reduce_mean_44_keep_dims_0, x = square_14_cast);
            tensor<fp16, []> add_28_y_0_to_fp16 = const()[name = tensor<string, []>("add_28_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_28_cast = add(x = reduce_mean_44_cast, y = add_28_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_14_cast = sqrt(x = add_28_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_14_cast = real_div(x = sub_28_cast, y = sqrt_14_cast);
            tensor<int32, [4]> reshape_57_shape_0 = const()[name = tensor<string, []>("reshape_57_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_57_cast = reshape(shape = reshape_57_shape_0, x = real_div_14_cast);
            tensor<fp16, [512]> add_29_mean_0_to_fp16 = const()[name = tensor<string, []>("add_29_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37841216)))];
            tensor<fp16, [512]> add_29_variance_0_to_fp16 = const()[name = tensor<string, []>("add_29_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37842304)))];
            tensor<fp16, [512]> add_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_29_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37843392)))];
            tensor<fp16, [512]> add_29_beta_0_to_fp16 = const()[name = tensor<string, []>("add_29_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37844480)))];
            tensor<fp16, []> add_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_29_cast = batch_norm(beta = add_29_beta_0_to_fp16, epsilon = add_29_epsilon_0_to_fp16, gamma = add_29_gamma_0_to_fp16, mean = add_29_mean_0_to_fp16, variance = add_29_variance_0_to_fp16, x = reshape_57_cast);
            tensor<fp16, [1, 512, 64, 64]> input_103_cast = silu(x = add_29_cast);
            tensor<int32, [2]> var_332 = const()[name = tensor<string, []>("op_332"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37845568)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42564224)))];
            tensor<fp16, [1, 512, 64, 64]> input_105_cast = conv(bias = encoder_down_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_334, groups = var_21, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_332, weight = encoder_down_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_103_cast);
            tensor<int32, [5]> reshape_60_shape_0 = const()[name = tensor<string, []>("reshape_60_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_60_cast = reshape(shape = reshape_60_shape_0, x = input_105_cast);
            tensor<int32, [3]> reduce_mean_45_axes_0 = const()[name = tensor<string, []>("reduce_mean_45_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_45_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_45_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_45_cast = reduce_mean(axes = reduce_mean_45_axes_0, keep_dims = reduce_mean_45_keep_dims_0, x = reshape_60_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_30_cast = sub(x = reshape_60_cast, y = reduce_mean_45_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_15_cast = square(x = sub_30_cast);
            tensor<int32, [3]> reduce_mean_47_axes_0 = const()[name = tensor<string, []>("reduce_mean_47_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_47_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_47_cast = reduce_mean(axes = reduce_mean_47_axes_0, keep_dims = reduce_mean_47_keep_dims_0, x = square_15_cast);
            tensor<fp16, []> add_30_y_0_to_fp16 = const()[name = tensor<string, []>("add_30_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_30_cast = add(x = reduce_mean_47_cast, y = add_30_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_15_cast = sqrt(x = add_30_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_15_cast = real_div(x = sub_30_cast, y = sqrt_15_cast);
            tensor<int32, [4]> reshape_61_shape_0 = const()[name = tensor<string, []>("reshape_61_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_61_cast = reshape(shape = reshape_61_shape_0, x = real_div_15_cast);
            tensor<fp16, [512]> add_31_mean_0_to_fp16 = const()[name = tensor<string, []>("add_31_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42565312)))];
            tensor<fp16, [512]> add_31_variance_0_to_fp16 = const()[name = tensor<string, []>("add_31_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42566400)))];
            tensor<fp16, [512]> add_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_31_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42567488)))];
            tensor<fp16, [512]> add_31_beta_0_to_fp16 = const()[name = tensor<string, []>("add_31_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42568576)))];
            tensor<fp16, []> add_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_31_cast = batch_norm(beta = add_31_beta_0_to_fp16, epsilon = add_31_epsilon_0_to_fp16, gamma = add_31_gamma_0_to_fp16, mean = add_31_mean_0_to_fp16, variance = add_31_variance_0_to_fp16, x = reshape_61_cast);
            tensor<fp16, [1, 512, 64, 64]> input_109_cast = silu(x = add_31_cast);
            tensor<int32, [2]> var_344 = const()[name = tensor<string, []>("op_344"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_346 = const()[name = tensor<string, []>("op_346"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_27_pad_type_0 = const()[name = tensor<string, []>("hidden_states_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_27_pad_0 = const()[name = tensor<string, []>("hidden_states_27_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42569664)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47288320)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_27_cast = conv(bias = encoder_down_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_346, groups = var_21, pad = hidden_states_27_pad_0, pad_type = hidden_states_27_pad_type_0, strides = var_344, weight = encoder_down_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_109_cast);
            tensor<fp16, [1, 512, 64, 64]> var_349_cast = add(x = var_319_cast, y = hidden_states_27_cast);
            tensor<int32, [5]> reshape_64_shape_0 = const()[name = tensor<string, []>("reshape_64_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_64_cast = reshape(shape = reshape_64_shape_0, x = var_349_cast);
            tensor<int32, [3]> reduce_mean_48_axes_0 = const()[name = tensor<string, []>("reduce_mean_48_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_48_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_48_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_48_cast = reduce_mean(axes = reduce_mean_48_axes_0, keep_dims = reduce_mean_48_keep_dims_0, x = reshape_64_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_32_cast = sub(x = reshape_64_cast, y = reduce_mean_48_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_16_cast = square(x = sub_32_cast);
            tensor<int32, [3]> reduce_mean_50_axes_0 = const()[name = tensor<string, []>("reduce_mean_50_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_50_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_50_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_50_cast = reduce_mean(axes = reduce_mean_50_axes_0, keep_dims = reduce_mean_50_keep_dims_0, x = square_16_cast);
            tensor<fp16, []> add_32_y_0_to_fp16 = const()[name = tensor<string, []>("add_32_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_32_cast = add(x = reduce_mean_50_cast, y = add_32_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_16_cast = sqrt(x = add_32_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_16_cast = real_div(x = sub_32_cast, y = sqrt_16_cast);
            tensor<int32, [4]> reshape_65_shape_0 = const()[name = tensor<string, []>("reshape_65_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_65_cast = reshape(shape = reshape_65_shape_0, x = real_div_16_cast);
            tensor<fp16, [512]> add_33_mean_0_to_fp16 = const()[name = tensor<string, []>("add_33_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47289408)))];
            tensor<fp16, [512]> add_33_variance_0_to_fp16 = const()[name = tensor<string, []>("add_33_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47290496)))];
            tensor<fp16, [512]> add_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_33_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47291584)))];
            tensor<fp16, [512]> add_33_beta_0_to_fp16 = const()[name = tensor<string, []>("add_33_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47292672)))];
            tensor<fp16, []> add_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_33_cast = batch_norm(beta = add_33_beta_0_to_fp16, epsilon = add_33_epsilon_0_to_fp16, gamma = add_33_gamma_0_to_fp16, mean = add_33_mean_0_to_fp16, variance = add_33_variance_0_to_fp16, x = reshape_65_cast);
            tensor<fp16, [1, 512, 64, 64]> input_117_cast = silu(x = add_33_cast);
            tensor<int32, [2]> var_368 = const()[name = tensor<string, []>("op_368"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_370 = const()[name = tensor<string, []>("op_370"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47293760)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52012416)))];
            tensor<fp16, [1, 512, 64, 64]> input_119_cast = conv(bias = encoder_mid_block_resnets_0_conv1_bias_to_fp16, dilations = var_370, groups = var_21, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = var_368, weight = encoder_mid_block_resnets_0_conv1_weight_to_fp16, x = input_117_cast);
            tensor<int32, [5]> reshape_68_shape_0 = const()[name = tensor<string, []>("reshape_68_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_68_cast = reshape(shape = reshape_68_shape_0, x = input_119_cast);
            tensor<int32, [3]> reduce_mean_51_axes_0 = const()[name = tensor<string, []>("reduce_mean_51_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_51_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_51_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_51_cast = reduce_mean(axes = reduce_mean_51_axes_0, keep_dims = reduce_mean_51_keep_dims_0, x = reshape_68_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_34_cast = sub(x = reshape_68_cast, y = reduce_mean_51_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_17_cast = square(x = sub_34_cast);
            tensor<int32, [3]> reduce_mean_53_axes_0 = const()[name = tensor<string, []>("reduce_mean_53_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_53_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_53_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_53_cast = reduce_mean(axes = reduce_mean_53_axes_0, keep_dims = reduce_mean_53_keep_dims_0, x = square_17_cast);
            tensor<fp16, []> add_34_y_0_to_fp16 = const()[name = tensor<string, []>("add_34_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_34_cast = add(x = reduce_mean_53_cast, y = add_34_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_17_cast = sqrt(x = add_34_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_17_cast = real_div(x = sub_34_cast, y = sqrt_17_cast);
            tensor<int32, [4]> reshape_69_shape_0 = const()[name = tensor<string, []>("reshape_69_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_69_cast = reshape(shape = reshape_69_shape_0, x = real_div_17_cast);
            tensor<fp16, [512]> add_35_mean_0_to_fp16 = const()[name = tensor<string, []>("add_35_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52013504)))];
            tensor<fp16, [512]> add_35_variance_0_to_fp16 = const()[name = tensor<string, []>("add_35_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52014592)))];
            tensor<fp16, [512]> add_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_35_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52015680)))];
            tensor<fp16, [512]> add_35_beta_0_to_fp16 = const()[name = tensor<string, []>("add_35_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52016768)))];
            tensor<fp16, []> add_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_35_cast = batch_norm(beta = add_35_beta_0_to_fp16, epsilon = add_35_epsilon_0_to_fp16, gamma = add_35_gamma_0_to_fp16, mean = add_35_mean_0_to_fp16, variance = add_35_variance_0_to_fp16, x = reshape_69_cast);
            tensor<fp16, [1, 512, 64, 64]> input_123_cast = silu(x = add_35_cast);
            tensor<int32, [2]> var_380 = const()[name = tensor<string, []>("op_380"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_382 = const()[name = tensor<string, []>("op_382"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_29_pad_type_0 = const()[name = tensor<string, []>("hidden_states_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_29_pad_0 = const()[name = tensor<string, []>("hidden_states_29_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52017856)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56736512)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_29_cast = conv(bias = encoder_mid_block_resnets_0_conv2_bias_to_fp16, dilations = var_382, groups = var_21, pad = hidden_states_29_pad_0, pad_type = hidden_states_29_pad_type_0, strides = var_380, weight = encoder_mid_block_resnets_0_conv2_weight_to_fp16, x = input_123_cast);
            tensor<fp16, [1, 512, 64, 64]> var_385_cast = add(x = var_349_cast, y = hidden_states_29_cast);
            tensor<int32, [5]> reshape_72_shape_0 = const()[name = tensor<string, []>("reshape_72_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_72_cast = reshape(shape = reshape_72_shape_0, x = var_385_cast);
            tensor<int32, [3]> reduce_mean_54_axes_0 = const()[name = tensor<string, []>("reduce_mean_54_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_54_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_54_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_54_cast = reduce_mean(axes = reduce_mean_54_axes_0, keep_dims = reduce_mean_54_keep_dims_0, x = reshape_72_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_36_cast = sub(x = reshape_72_cast, y = reduce_mean_54_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_18_cast = square(x = sub_36_cast);
            tensor<int32, [3]> reduce_mean_56_axes_0 = const()[name = tensor<string, []>("reduce_mean_56_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_56_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_56_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_56_cast = reduce_mean(axes = reduce_mean_56_axes_0, keep_dims = reduce_mean_56_keep_dims_0, x = square_18_cast);
            tensor<fp16, []> add_36_y_0_to_fp16 = const()[name = tensor<string, []>("add_36_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_36_cast = add(x = reduce_mean_56_cast, y = add_36_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_18_cast = sqrt(x = add_36_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_18_cast = real_div(x = sub_36_cast, y = sqrt_18_cast);
            tensor<int32, [4]> reshape_73_shape_0 = const()[name = tensor<string, []>("reshape_73_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_73_cast = reshape(shape = reshape_73_shape_0, x = real_div_18_cast);
            tensor<fp16, [512]> add_37_mean_0_to_fp16 = const()[name = tensor<string, []>("add_37_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56737600)))];
            tensor<fp16, [512]> add_37_variance_0_to_fp16 = const()[name = tensor<string, []>("add_37_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56738688)))];
            tensor<fp16, [512]> add_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_37_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56739776)))];
            tensor<fp16, [512]> add_37_beta_0_to_fp16 = const()[name = tensor<string, []>("add_37_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56740864)))];
            tensor<fp16, []> add_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_37_cast = batch_norm(beta = add_37_beta_0_to_fp16, epsilon = add_37_epsilon_0_to_fp16, gamma = add_37_gamma_0_to_fp16, mean = add_37_mean_0_to_fp16, variance = add_37_variance_0_to_fp16, x = reshape_73_cast);
            tensor<int32, [3]> var_404 = const()[name = tensor<string, []>("op_404"), val = tensor<int32, [3]>([1, 512, 4096])];
            tensor<fp16, [1, 512, 4096]> var_405_cast = reshape(shape = var_404, x = add_37_cast);
            tensor<int32, [3]> input_127_perm_0 = const()[name = tensor<string, []>("input_127_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_query_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_query_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56741952)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_query_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_query_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57266304)))];
            tensor<fp16, [1, 4096, 512]> transpose_6 = transpose(perm = input_127_perm_0, x = var_405_cast);
            tensor<fp16, [1, 4096, 512]> tensor_1_cast = linear(bias = encoder_mid_block_attentions_0_query_bias_to_fp16, weight = encoder_mid_block_attentions_0_query_weight_to_fp16, x = transpose_6);
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_key_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_key_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57267392)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_key_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_key_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57791744)))];
            tensor<fp16, [1, 4096, 512]> tensor_5_cast = linear(bias = encoder_mid_block_attentions_0_key_bias_to_fp16, weight = encoder_mid_block_attentions_0_key_weight_to_fp16, x = transpose_6);
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_value_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_value_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57792832)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_value_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_value_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58317184)))];
            tensor<fp16, [1, 4096, 512]> tensor_9_cast = linear(bias = encoder_mid_block_attentions_0_value_bias_to_fp16, weight = encoder_mid_block_attentions_0_value_weight_to_fp16, x = transpose_6);
            tensor<int32, [4]> var_423 = const()[name = tensor<string, []>("op_423"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_3_cast = reshape(shape = var_423, x = tensor_1_cast);
            tensor<int32, [4]> var_425 = const()[name = tensor<string, []>("op_425"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_432 = const()[name = tensor<string, []>("op_432"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_5 = transpose(perm = var_425, x = tensor_3_cast);
            tensor<fp16, [1, 4096, 512]> query_proj_cast = reshape(shape = var_432, x = transpose_5);
            tensor<int32, [4]> var_441 = const()[name = tensor<string, []>("op_441"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_7_cast = reshape(shape = var_441, x = tensor_5_cast);
            tensor<int32, [4]> var_443 = const()[name = tensor<string, []>("op_443"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_450 = const()[name = tensor<string, []>("op_450"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_4 = transpose(perm = var_443, x = tensor_7_cast);
            tensor<fp16, [1, 4096, 512]> key_proj_cast = reshape(shape = var_450, x = transpose_4);
            tensor<int32, [4]> var_459 = const()[name = tensor<string, []>("op_459"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_11_cast = reshape(shape = var_459, x = tensor_9_cast);
            tensor<int32, [4]> var_461 = const()[name = tensor<string, []>("op_461"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_468 = const()[name = tensor<string, []>("op_468"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_3 = transpose(perm = var_461, x = tensor_11_cast);
            tensor<fp16, [1, 4096, 512]> value_proj_cast = reshape(shape = var_468, x = transpose_3);
            tensor<int32, [3]> var_475_perm_0 = const()[name = tensor<string, []>("op_475_perm_0"), val = tensor<int32, [3]>([0, -1, -2])];
            tensor<fp16, []> var_9_to_fp16 = const()[name = tensor<string, []>("op_9_to_fp16"), val = tensor<fp16, []>(0x1.6ap-5)];
            tensor<fp16, [1, 4096, 512]> query_proj_scaled_cast = mul(x = var_9_to_fp16, y = query_proj_cast);
            tensor<bool, []> attention_scores_1_bmm_transpose_x_0 = const()[name = tensor<string, []>("attention_scores_1_bmm_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attention_scores_1_bmm_transpose_y_0 = const()[name = tensor<string, []>("attention_scores_1_bmm_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 4096]> transpose_2 = transpose(perm = var_475_perm_0, x = key_proj_cast);
            tensor<fp16, [1, 4096, 4096]> attention_scores_1_bmm_cast = matmul(transpose_x = attention_scores_1_bmm_transpose_x_0, transpose_y = attention_scores_1_bmm_transpose_y_0, x = query_proj_scaled_cast, y = transpose_2);
            tensor<fp16, [1, 4096, 4096]> var_478_cast = softmax(axis = var_11, x = attention_scores_1_bmm_cast);
            tensor<bool, []> tensor_13_transpose_x_0 = const()[name = tensor<string, []>("tensor_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> tensor_13_transpose_y_0 = const()[name = tensor<string, []>("tensor_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4096, 512]> tensor_13_cast = matmul(transpose_x = tensor_13_transpose_x_0, transpose_y = tensor_13_transpose_y_0, x = var_478_cast, y = value_proj_cast);
            tensor<int32, [4]> var_488 = const()[name = tensor<string, []>("op_488"), val = tensor<int32, [4]>([1, 1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> tensor_cast = reshape(shape = var_488, x = tensor_13_cast);
            tensor<int32, [4]> var_490 = const()[name = tensor<string, []>("op_490"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_497 = const()[name = tensor<string, []>("op_497"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 4096, 1, 512]> transpose_1 = transpose(perm = var_490, x = tensor_cast);
            tensor<fp16, [1, 4096, 512]> input_129_cast = reshape(shape = var_497, x = transpose_1);
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_proj_attn_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_proj_attn_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58318272)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_proj_attn_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_proj_attn_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58842624)))];
            tensor<fp16, [1, 4096, 512]> hidden_states_35_cast = linear(bias = encoder_mid_block_attentions_0_proj_attn_bias_to_fp16, weight = encoder_mid_block_attentions_0_proj_attn_weight_to_fp16, x = input_129_cast);
            tensor<int32, [3]> var_502_perm_0 = const()[name = tensor<string, []>("op_502_perm_0"), val = tensor<int32, [3]>([0, -1, -2])];
            tensor<int32, [4]> var_503 = const()[name = tensor<string, []>("op_503"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 4096]> transpose_0 = transpose(perm = var_502_perm_0, x = hidden_states_35_cast);
            tensor<fp16, [1, 512, 64, 64]> hidden_states_37_cast = reshape(shape = var_503, x = transpose_0);
            tensor<fp16, [1, 512, 64, 64]> var_505_cast = add(x = hidden_states_37_cast, y = var_385_cast);
            tensor<int32, [5]> reshape_76_shape_0 = const()[name = tensor<string, []>("reshape_76_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_76_cast = reshape(shape = reshape_76_shape_0, x = var_505_cast);
            tensor<int32, [3]> reduce_mean_57_axes_0 = const()[name = tensor<string, []>("reduce_mean_57_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_57_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_57_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_57_cast = reduce_mean(axes = reduce_mean_57_axes_0, keep_dims = reduce_mean_57_keep_dims_0, x = reshape_76_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_38_cast = sub(x = reshape_76_cast, y = reduce_mean_57_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_19_cast = square(x = sub_38_cast);
            tensor<int32, [3]> reduce_mean_59_axes_0 = const()[name = tensor<string, []>("reduce_mean_59_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_59_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_59_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_59_cast = reduce_mean(axes = reduce_mean_59_axes_0, keep_dims = reduce_mean_59_keep_dims_0, x = square_19_cast);
            tensor<fp16, []> add_38_y_0_to_fp16 = const()[name = tensor<string, []>("add_38_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_38_cast = add(x = reduce_mean_59_cast, y = add_38_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_19_cast = sqrt(x = add_38_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_19_cast = real_div(x = sub_38_cast, y = sqrt_19_cast);
            tensor<int32, [4]> reshape_77_shape_0 = const()[name = tensor<string, []>("reshape_77_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_77_cast = reshape(shape = reshape_77_shape_0, x = real_div_19_cast);
            tensor<fp16, [512]> add_39_mean_0_to_fp16 = const()[name = tensor<string, []>("add_39_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58843712)))];
            tensor<fp16, [512]> add_39_variance_0_to_fp16 = const()[name = tensor<string, []>("add_39_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58844800)))];
            tensor<fp16, [512]> add_39_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_39_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58845888)))];
            tensor<fp16, [512]> add_39_beta_0_to_fp16 = const()[name = tensor<string, []>("add_39_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58846976)))];
            tensor<fp16, []> add_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_39_cast = batch_norm(beta = add_39_beta_0_to_fp16, epsilon = add_39_epsilon_0_to_fp16, gamma = add_39_gamma_0_to_fp16, mean = add_39_mean_0_to_fp16, variance = add_39_variance_0_to_fp16, x = reshape_77_cast);
            tensor<fp16, [1, 512, 64, 64]> input_135_cast = silu(x = add_39_cast);
            tensor<int32, [2]> var_518 = const()[name = tensor<string, []>("op_518"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_520 = const()[name = tensor<string, []>("op_520"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_137_pad_type_0 = const()[name = tensor<string, []>("input_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_137_pad_0 = const()[name = tensor<string, []>("input_137_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58848064)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63566720)))];
            tensor<fp16, [1, 512, 64, 64]> input_137_cast = conv(bias = encoder_mid_block_resnets_1_conv1_bias_to_fp16, dilations = var_520, groups = var_21, pad = input_137_pad_0, pad_type = input_137_pad_type_0, strides = var_518, weight = encoder_mid_block_resnets_1_conv1_weight_to_fp16, x = input_135_cast);
            tensor<int32, [5]> reshape_80_shape_0 = const()[name = tensor<string, []>("reshape_80_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_80_cast = reshape(shape = reshape_80_shape_0, x = input_137_cast);
            tensor<int32, [3]> reduce_mean_60_axes_0 = const()[name = tensor<string, []>("reduce_mean_60_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_60_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_60_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_60_cast = reduce_mean(axes = reduce_mean_60_axes_0, keep_dims = reduce_mean_60_keep_dims_0, x = reshape_80_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_40_cast = sub(x = reshape_80_cast, y = reduce_mean_60_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_20_cast = square(x = sub_40_cast);
            tensor<int32, [3]> reduce_mean_62_axes_0 = const()[name = tensor<string, []>("reduce_mean_62_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_62_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_62_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_62_cast = reduce_mean(axes = reduce_mean_62_axes_0, keep_dims = reduce_mean_62_keep_dims_0, x = square_20_cast);
            tensor<fp16, []> add_40_y_0_to_fp16 = const()[name = tensor<string, []>("add_40_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_40_cast = add(x = reduce_mean_62_cast, y = add_40_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_20_cast = sqrt(x = add_40_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_20_cast = real_div(x = sub_40_cast, y = sqrt_20_cast);
            tensor<int32, [4]> reshape_81_shape_0 = const()[name = tensor<string, []>("reshape_81_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_81_cast = reshape(shape = reshape_81_shape_0, x = real_div_20_cast);
            tensor<fp16, [512]> add_41_mean_0_to_fp16 = const()[name = tensor<string, []>("add_41_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63567808)))];
            tensor<fp16, [512]> add_41_variance_0_to_fp16 = const()[name = tensor<string, []>("add_41_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63568896)))];
            tensor<fp16, [512]> add_41_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_41_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63569984)))];
            tensor<fp16, [512]> add_41_beta_0_to_fp16 = const()[name = tensor<string, []>("add_41_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63571072)))];
            tensor<fp16, []> add_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_41_cast = batch_norm(beta = add_41_beta_0_to_fp16, epsilon = add_41_epsilon_0_to_fp16, gamma = add_41_gamma_0_to_fp16, mean = add_41_mean_0_to_fp16, variance = add_41_variance_0_to_fp16, x = reshape_81_cast);
            tensor<fp16, [1, 512, 64, 64]> input_141_cast = silu(x = add_41_cast);
            tensor<int32, [2]> var_530 = const()[name = tensor<string, []>("op_530"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_532 = const()[name = tensor<string, []>("op_532"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63572160)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68290816)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_cast = conv(bias = encoder_mid_block_resnets_1_conv2_bias_to_fp16, dilations = var_532, groups = var_21, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_530, weight = encoder_mid_block_resnets_1_conv2_weight_to_fp16, x = input_141_cast);
            tensor<fp16, [1, 512, 64, 64]> var_535_cast = add(x = var_505_cast, y = hidden_states_cast);
            tensor<int32, [5]> reshape_84_shape_0 = const()[name = tensor<string, []>("reshape_84_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_84_cast = reshape(shape = reshape_84_shape_0, x = var_535_cast);
            tensor<int32, [3]> reduce_mean_63_axes_0 = const()[name = tensor<string, []>("reduce_mean_63_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_63_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_63_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_63_cast = reduce_mean(axes = reduce_mean_63_axes_0, keep_dims = reduce_mean_63_keep_dims_0, x = reshape_84_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_42_cast = sub(x = reshape_84_cast, y = reduce_mean_63_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_21_cast = square(x = sub_42_cast);
            tensor<int32, [3]> reduce_mean_65_axes_0 = const()[name = tensor<string, []>("reduce_mean_65_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_65_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_65_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_65_cast = reduce_mean(axes = reduce_mean_65_axes_0, keep_dims = reduce_mean_65_keep_dims_0, x = square_21_cast);
            tensor<fp16, []> add_42_y_0_to_fp16 = const()[name = tensor<string, []>("add_42_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_42_cast = add(x = reduce_mean_65_cast, y = add_42_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_21_cast = sqrt(x = add_42_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_21_cast = real_div(x = sub_42_cast, y = sqrt_21_cast);
            tensor<int32, [4]> reshape_85_shape_0 = const()[name = tensor<string, []>("reshape_85_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_85_cast = reshape(shape = reshape_85_shape_0, x = real_div_21_cast);
            tensor<fp16, [512]> add_43_mean_0_to_fp16 = const()[name = tensor<string, []>("add_43_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68291904)))];
            tensor<fp16, [512]> add_43_variance_0_to_fp16 = const()[name = tensor<string, []>("add_43_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68292992)))];
            tensor<fp16, [512]> add_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_43_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68294080)))];
            tensor<fp16, [512]> add_43_beta_0_to_fp16 = const()[name = tensor<string, []>("add_43_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68295168)))];
            tensor<fp16, []> add_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_43_cast = batch_norm(beta = add_43_beta_0_to_fp16, epsilon = add_43_epsilon_0_to_fp16, gamma = add_43_gamma_0_to_fp16, mean = add_43_mean_0_to_fp16, variance = add_43_variance_0_to_fp16, x = reshape_85_cast);
            tensor<fp16, [1, 512, 64, 64]> input_149_cast = silu(x = add_43_cast);
            tensor<int32, [2]> var_544 = const()[name = tensor<string, []>("op_544"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_546 = const()[name = tensor<string, []>("op_546"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_pad_type_0 = const()[name = tensor<string, []>("input_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_pad_0 = const()[name = tensor<string, []>("input_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [8, 512, 3, 3]> encoder_conv_out_weight_to_fp16 = const()[name = tensor<string, []>("encoder_conv_out_weight_to_fp16"), val = tensor<fp16, [8, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68296256)))];
            tensor<fp16, [8]> encoder_conv_out_bias_to_fp16 = const()[name = tensor<string, []>("encoder_conv_out_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.734p-9, 0x1.0f4p-8, 0x1.afp-6, -0x1.494p-7, -0x1.ep-9, -0x1.924p-8, -0x1.1dp-10, -0x1.4b8p-8])];
            tensor<fp16, [1, 8, 64, 64]> input_cast = conv(bias = encoder_conv_out_bias_to_fp16, dilations = var_546, groups = var_21, pad = input_pad_0, pad_type = input_pad_type_0, strides = var_544, weight = encoder_conv_out_weight_to_fp16, x = input_149_cast);
            tensor<int32, []> var_552 = const()[name = tensor<string, []>("op_552"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_555 = const()[name = tensor<string, []>("op_555"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_557 = const()[name = tensor<string, []>("op_557"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> parameters_pad_type_0 = const()[name = tensor<string, []>("parameters_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> parameters_pad_0 = const()[name = tensor<string, []>("parameters_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 8, 1, 1]> quant_conv_weight_to_fp16 = const()[name = tensor<string, []>("quant_conv_weight_to_fp16"), val = tensor<fp16, [8, 8, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68370048)))];
            tensor<fp16, [8]> quant_conv_bias_to_fp16 = const()[name = tensor<string, []>("quant_conv_bias_to_fp16"), val = tensor<fp16, [8]>([0x1.8cp-3, 0x1.d68p-4, -0x1.b8cp-4, -0x1.5fp-2, -0x1.284p+1, -0x1.09cp+1, -0x1.178p+1, -0x1.1d8p+1])];
            tensor<fp16, [1, 8, 64, 64]> parameters_cast = conv(bias = quant_conv_bias_to_fp16, dilations = var_557, groups = var_552, pad = parameters_pad_0, pad_type = parameters_pad_type_0, strides = var_555, weight = quant_conv_weight_to_fp16, x = input_cast);
            tensor<int32, [2]> var_560_split_sizes_0 = const()[name = tensor<string, []>("op_560_split_sizes_0"), val = tensor<int32, [2]>([4, 4])];
            tensor<int32, []> var_560_axis_0 = const()[name = tensor<string, []>("op_560_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 4, 64, 64]> var_560_cast_0, tensor<fp16, [1, 4, 64, 64]> var_560_cast_1 = split(axis = var_560_axis_0, split_sizes = var_560_split_sizes_0, x = parameters_cast);
            tensor<fp16, []> var_562_to_fp16 = const()[name = tensor<string, []>("op_562_to_fp16"), val = tensor<fp16, []>(-0x1.ep+4)];
            tensor<fp16, []> var_563_to_fp16 = const()[name = tensor<string, []>("op_563_to_fp16"), val = tensor<fp16, []>(0x1.4p+4)];
            tensor<fp16, [1, 4, 64, 64]> var_564_cast = clip(alpha = var_562_to_fp16, beta = var_563_to_fp16, x = var_560_cast_1);
            tensor<fp16, []> var_565_to_fp16 = const()[name = tensor<string, []>("op_565_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 4, 64, 64]> var_566_cast = mul(x = var_564_cast, y = var_565_to_fp16);
            tensor<fp16, [1, 4, 64, 64]> var_567_cast = exp(x = var_566_cast);
            tensor<fp16, [1, 4, 64, 64]> var_568_cast = mul(x = var_567_cast, y = diagonal_noise);
            tensor<fp16, [1, 4, 64, 64]> posteriorSample_cast = add(x = var_560_cast_0, y = var_568_cast);
            tensor<fp16, []> var_571_to_fp16 = const()[name = tensor<string, []>("op_571_to_fp16"), val = tensor<fp16, []>(0x1.75p-3)];
            tensor<fp16, [1, 4, 64, 64]> original_samples_cast = mul(x = posteriorSample_cast, y = var_571_to_fp16);
            tensor<fp16, [1, 4, 64, 64]> var_573_cast = mul(x = sqrt_alphas_cumprod, y = original_samples_cast);
            tensor<fp16, [1, 4, 64, 64]> var_574_cast = mul(x = sqrt_one_minus_alphas_cumprod, y = noise);
            tensor<fp16, [1, 4, 64, 64]> var_576_cast = add(x = var_573_cast, y = var_574_cast);
            tensor<string, []> var_576_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_576_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 4, 64, 64]> latent_dist = cast(dtype = var_576_cast_to_fp32_dtype_0, x = var_576_cast);
        } -> (latent_dist);
}